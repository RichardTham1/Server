input CourseInput {
    courseName: String,
    passingGrade: Int,
    marks: [MarkInput],
    grade: Float,
    accumulatedPoints: Float
}

input MarkInput {
    name: String,
    weight: Int,
    mark: Float
}

type Mutation {
    createUser(email: String): User
    addCourse(email: String, course: CourseInput): [Course]
    modifyCourse(email: String, courseModified: CourseInput, courseName: String): [Course]
}

type Query {
    getUser(email: String): User
}

type User {
    email: String,
    courses: [Course]
}

type Course {
    courseName: String,
    passingGrade: Int,
    marks: [Mark],
    grade: Float,
    accumulatedPoints: Float,
    pointsLeft: Float
}

type Mark {
    name: String,
    weight: Int,
    mark: Float
}